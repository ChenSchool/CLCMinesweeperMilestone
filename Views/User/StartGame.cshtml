@model List<ButtonModel>

@{
    ViewData["Title"] = "Game Board";
    var boardSize = Context.Session.GetInt32("BoardSize") ?? 6;
    var difficulty = Context.Session.GetString("Difficulty") ?? "Easy";
}

<h2 class="text-center">Minesweeper - Dungeon Delver</h2>
<p class="text-center"><strong>Difficulty:</strong> @difficulty</p>
<p class="text-center"><strong>Board Size:</strong> @boardSize x @boardSize</p>

<!-- Timestamp Display -->
<p class="text-center"><strong>Last Updated:</strong> <span id="timestamp"></span></p>

<!-- Game Board -->
<div id="game-board-container">
    @await Html.PartialAsync("_GameBoardPartial", Model)
</div>

<div class="form-group flex-row">
    <a id="save-game-btn" href="#" class="btn btn-primary">Save Game</a>
    <a href="@Url.Action("Games","User")" class="btn btn-primary">Show Games</a>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Save Game Button click via AJAX
            $("#save-game-btn").click(function(e) {
                e.preventDefault();  // Prevent default link behavior

                $.post('/User/SaveGame')
                    .done(function(data) {
                        if(data.timestamp) {
                            // Update the timestamp element with the returned timestamp
                            $("#timestamp").text(data.timestamp);
                        } else {
                            console.error("No timestamp returned from server.");
                        }
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        console.error("Error saving game:", textStatus, errorThrown);
                        alert("Error saving game. Please try again.");
                    });
            });

            // LEFT-CLICK: Reveal a tile
            $(document).off("click", ".game-button").on("click", ".game-button", function (event) {
                event.preventDefault();

                var button = $(this);
                var tileId = button.data("id"); // Get tile ID

                // Prevent clicking flagged tiles
                if (button.hasClass("flagged")) {
                    return;
                }

                $.post('/User/ButtonClick', { id: tileId })
                    .done(function (data) {
                        console.log("Response Data:", data); // Debugging

                        if (data.redirectUrl) {
                            window.location.href = data.redirectUrl; // Handle win/loss
                        } else if (typeof data === "string" && data.trim().length > 0) {
                            $("#game-board-container").html(data); // Update board dynamically
                            $("#timestamp").text(new Date().toLocaleTimeString());
                        } else {
                            console.error("Unexpected empty response");
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("AJAX Error:", textStatus, errorThrown);
                        alert("Something went wrong. Please try again.");
                    });
            });

            // RIGHT-CLICK: Toggle flag
            $(document).on("contextmenu", ".game-button", function (e) {
                e.preventDefault(); // Prevent default right-click menu

                var tileId = $(this).data("id"); // Get tile ID

                $.post('/User/ToggleFlag', { id: tileId })
                    .done(function (data) {
                        console.log("Flag Response:", data);

                        if (data.redirectUrl) {
                            window.location.href = data.redirectUrl; // Handle win/loss
                        } else if (typeof data === "string" && data.trim().length > 0) {
                            $("#game-board-container").html(data); // Update board
                            $("#timestamp").text(new Date().toLocaleTimeString());
                        } else {
                            console.error("Empty flag response");
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("ToggleFlag Error:", textStatus, errorThrown);
                        alert("Flag toggle error. Please try again.");
                    });
            });
        });

    </script>
}

